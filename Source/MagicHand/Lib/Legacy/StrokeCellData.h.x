#ifndef STROKE_CELL_DATA_H
#define STROKE_CELL_DATA_H


static const uint8_t strokeHOGFeatures[][18] PROGMEM = {

    // Space
    {
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0
    },

    // Dot
    {
        2, 2,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0
    },

    // Left bracket
    {
        2, 1,
        2, 1,
        -1, 0,
        2, 3,
        -1, 0,
        -1, 0,
        5, 2,
        -1, 0,
        -1, 0
    },

    //Rightbracket
    {
        5, 2,
        5, 2,
        -1, 0,
        3, 3,
        4, 4,
        -1, 0,
        2, 1,
        1, 1,
        -1, 0
    },
    //0
    {
        3, 3,
        6, 1,
        -1, 0,
        2, 2,
        3, 3,
        5, 3,
        6, 2,
        2, 1,
        -1, 0
    },

    //2
    {
        3, 2,
        6, 2,
        -1, 0,
        2, 1,
        2, 2,
        -1, 0,
        3, 1,
        3, 2,
        6, 1
    },

    //3
    {
        3, 2,
        5, 3,
        -1, 0,
        3, 2,
        6, 2,
        -1, 0,
        3, 2,
        3, 3,
        1, 1
    },

    //Partof4
    {
        1, 1,
        0, 1,
        -1, 0,
        1, 1,
        -1, 0,
        -1, 0,
        3, 2,
        4, 1,
        3, 3
    },

    //Partof5
    {
        1, 1,
        -1, 0,
        -1, 0,
        4, 2,
        6, 2,
        -1, 0,
        4, 2,
        2, 2,
        -1, 0
    },

    //6
    {
        2, 2,
        3, 2,
        -1, 0,
        2, 2,
        6, 1,
        4, 4,
        5, 2,
        3, 2,
        -1, 0
    },

    //Partof7
    {
        4, 0,
        4, 1,
        2, 1,
        2, 2,
        2, 2,
        -1, 0,
        1, 2,
        1, 2,
        -1, 0
    },

    //8
    {
        3, 2,
        4, 3,
        -1, 0,
        3, 2,
        2, 2,
        -1, 0,
        4, 2,
        3, 3,
        -1, 0
    },

    //Partof9
    {
        3, 2,
        2, 3,
        -1, 0,
        4, 2,
        1, 1,
        -1, 0,
        1, 2,
        0, 1,
        -1, 0
    },

    //Verticalline
    {
        0, 0,
        -1, 0,
        -1, 0,
        3, 3,
        -1, 0,
        -1, 0,
        0, 0,
        -1, 0,
        -1, 0
    },

    //Horizontalline
    {
        4, 0,
        4, 0,
        4, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0,
        -1, 0
    },

    //Slash
    {
        1, 1,
        1, 1,
        -1, 0,
        1, 1,
        1, 1,
        -1, 0,
        2, 2,
        -1, 0,
        -1, 0
    },

    //Backslash
    {
        6, 2,
        -1, 0,
        -1, 0,
        6, 1,
        7, 1,
        -1, 0,
        6, 2,
        6, 2,
        6, 2
    }
};


#endif
